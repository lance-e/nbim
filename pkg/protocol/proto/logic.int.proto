syntax = "proto3";
option go_package = "pkg/protocol/pb";
package pb;

import "google/protobuf/empty.proto";
import "logic.ext.proto";
import "message.proto";

service LogicInt{
  //权限校验
  rpc Auth (AuthReq) returns (google.protobuf.Empty);

  // 长连接登陆,建立tcp连接时调用
  rpc ConnSignIn (ConnSignInReq ) returns (google.protobuf.Empty);
  //消息同步
  rpc Sync (SyncReq) returns (SyncResp);
  //设备收到消息回执
  rpc ReceiveACK(ReceiveACKReq) returns (google.protobuf.Empty);
  //设备离线
  rpc Offline (OfflineReq) returns (google.protobuf.Empty);
  //订阅房间
  rpc SubscribeRoom (SubscribeRoomReq) returns (google.protobuf.Empty);
  //推送
  rpc Push (PushReq) returns (PushResp);
  //推送消息到房间
  rpc PushRoom (PushRoomReq) returns (google.protobuf.Empty);
  //推送消息到全服
  rpc PushAll (PushAllReq) returns (google.protobuf.Empty);
  //获取设备信息
  rpc GetDevice (GetDeviceReq) returns (GetDeviceResp) ;
  //服务停止
  rpc ServerStop (ServerStopReq) returns (google.protobuf.Empty);
}


//鉴权请求
message AuthReq{
  int64 user_id  =1;                //用户id
  int64 device_id = 2;              //设备id
  string token = 3;                 //token
}


//登陆
message ConnSignInReq{
  int64 device_id = 1;          //设备id
  int64 user_id = 2;            //用户id
  string token = 3;             //秘钥
  string server_addr = 4;       //服务器地址
  string client_addr = 5;       //客户端地址
}


//消息同步
//请求:
message SyncReq{
  int64 device_id = 1;          //设备id
  int64 user_id = 2 ;           //用户id
  int64 seq = 3;                //客户端已经同步的序列号 
}
//响应:
message SyncResp{
  repeated Data messages = 1; //消息列表
  bool has_more = 2 ;           //是否有更多数据
}

//设备收到消息,回执ack
message ReceiveACKReq{
  int64 user_id =  1 ;          //用户id
  int64 device_id = 2;          //设备id
  int64 device_ack = 3;         //设备受到消息的确认号
  int64 receive_time = 4;       //消息接受时间戳,精确到毫秒
}

//设备离线
message OfflineReq{
  int64 user_id =1;             //用户id
  int64 device_id = 2;          //设备id
  string client_addr = 3;       //客户端地址
}

//订阅房间
message SubscribeRoomReq{
  int64 user_id = 1;            //用户id
  int64 device_id = 2;          //设备id
  int64 room_id = 3;            //房间id
  int64 seq = 4;                //消息序列号
  string server_addr = 5;       //服务器地址
}

//推送
//请求
message PushReq{
  int64 user_id = 1;            //用户id
  int32 code = 2;               //推送码
  bytes content = 3;            //推送内容
  bool is_persist = 4;          //是否持久化
}
//响应
message PushResp{
  int64 seq = 1;                //序列号
}

//推送消息到房间
//logic.ext.proto


//推送消息到全服
message PushAllReq{
  int64 code = 1 ;              //推送码
  bytes content = 2 ;           //消息内容
}

//获取设备信息
//请求
message GetDeviceReq {
  int64 device_id = 1;          //设备id
}
//响应
message GetDeviceResp{
  Device device = 1 ;           //设备信息
}

//设备信息
message Device {
  int64 device_id = 1;          //设备id
  int64 user_id = 2;            //用户id
  int32 type = 3;               //设备类型,1.Android;2.IOS;3.Windows;4.Macos;5:Web
  string brand = 4;             //手机厂商
  string model = 5;             //机型
  string system_version =6;     //系统版本
  string sdk_version = 7;       //SDK版本
  int32 status = 8;             //在线状态,0:不在线;1:在线
  string server_addr = 9;       //服务器地址
  string client_addr = 10;      //客户端地址
  int64 create_time = 11;       //创建时间
  int64 update_time = 12;       //更新时间
}

//服务停止
message ServerStopReq{
  string server_addr = 1;       //服务器地址
}
